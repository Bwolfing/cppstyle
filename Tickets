Tickets
=======

--- Here I will write down "tickets" that need to be completed.  These will be problems with the program that need to be fixed / debugged.
--- If you notice one that needs to be done, document it in the same fashion.
--- If you complete one, I'll delete it after I make sure it works.


Example Ticket:

Ticket 01
---------
Owner: ???
Problem: 
- Fix the bug caused by using multiple command-line arguments (multiple files to check).

Ticket 02
---------
Owner: ???
Problem:
- Allow extension to be '.h' besides '.cpp'. 

Ticket 03
---------
Owner: ???
Problem:
- Need to print a newline after "Incorrect filetype".

Ticket 04
---------
Owner: ???
Problem:
- Fix the crash when asking to check an empty file or one that starts with a blank line.

Ticket 05
---------
Owner: ???
Problem:
- Check that there is at least one command-line argument / file to check.

Ticket 06
---------
Owner: ???
Problem:
- Check that no ternary operator is used.

Ticket 07
---------
Owner: ???
Problem: 
- Check that no 'while (true)' is used.

Ticket 08
---------
Owner: Mike 
Problem:
- Convert all RegEx expressions to PyParsing functions to increase accuracy.

Ticket 09
---------
Owner: ??? 
Problem:
Check that main is declared as main(), main(void) or main(int argc, char* argv[]) -- Will add ticket

Ticket 10
---------
Owner: ??? 
Problem:
Check that return type of main is 'int'. No need to check for 'return 0'. -- Will add ticket

Ticket 11
---------
Owner: ??? 
Problem:
Check that code does not have 'continue'  

Ticket 12
---------
Owner: ??? 
Problem:
Check that no '#define' is used.

Ticket 13
---------
Owner: ??? 
Problem:
Check that no ternary operator is used.

Ticket 14
---------
Owner: ??? 
Problem:
Check that no 'while (true)' is used.

Ticket 15
---------
Owner: ??? 
Problem:
Check that no 'x == true' or 'x == false' is used.

Ticket 16
---------
Owner: Mike
Problem:
- Operator Space function doesn't consider self-incrementing.  (It sees i++ as an error)

Ticket 17
---------
Owner: Mike
Problem:
- Messy code needs to be refactored with consistent naming conventions and multiple files.
- Settling currently on separating into functions, main, and classes files.
- MVC framework is possible, still deciding if webapp will be entirely separate (leaning in this direction)
